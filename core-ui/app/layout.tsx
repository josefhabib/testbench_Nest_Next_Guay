import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import getAuthStatus from "@/server-actions/auth/action_get-auth-status";
import ContextProviders from "@/contexts/context-providers";
import { IAuthContext } from "@/interfaces_types/auth-context.interface";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Transcend",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }: Readonly<{children: React.ReactNode;}>) {

    // --- Server Actions to get context values
    const authStatus:IAuthContext = await getAuthStatus(); // Is the user authenticated?
  
    //TODO: Enrich authStatus with user information (Do this after the user database, whoami endpoint, and auth-context are implemented)
    // let user:IWhoamiResponse = { status: "notLoggedIn" };  // If the user is authenticated, get the user's information
    // if (authStatus.authenticated) {                         
    //   authStatus.username = ...
    // }


  return (
    <html lang="en" className="dark">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ContextProviders authStatus={authStatus}> 
          {children}
        </ContextProviders>
      </body>
    </html>
  );
}
